#!/usr/bin/env python3

"""
tekaim - Simple screenshot uploader using maim and teknik.io
"""

from pathlib import Path
from datetime import datetime
import json
import os
import re
import subprocess
import sys

VERSION = "1.3.0"

def main(argv):
    """main"""
    # check arguments
    if '-h' in argv or '--help' in argv:
        print('tekaim v' + VERSION)
        print('Run without arguments to capture a screenshot and upload to teknik.io')
        print('https://github.com/IvanFon/tekaim')
        print('Made by Ivan Fonseca\n<3')
        return

    # tekaim dircectory
    tekaim_dir = Path.home().joinpath('.tekaim')
    # screenshot directory
    screenshot_dir = tekaim_dir.joinpath('screenshots')
    # history directory
    history_dir = tekaim_dir.joinpath('history')

    # check if tekaim directory exists
    if not os.path.exists(tekaim_dir):
        print('Error: tekaim directory ({}) does not exist!'.format(tekaim_dir))
        print('Create it and put config.json in it!')
        return

    # load settings file
    with open(tekaim_dir.joinpath('config.json'), 'r') as config_file:
        config = config_file.read()
    # strip comments
    config = re.sub(r'^\s*//.*$', '', config, flags=re.MULTILINE)
    config = json.loads(config)

    # create screenshots directory if it doesn't already exist
    if not os.path.exists(screenshot_dir):
        os.makedirs(screenshot_dir)
    # create history directory if it doesn't already exist
    if not os.path.exists(history_dir):
        os.makedirs(history_dir)

    # get filename
    filename = datetime.now().strftime(config['filename'])
    image_filename = filename + config['format']
    history_filename = filename + '.txt'

    # build screenshot command
    screenshot_args = config['screenshot']['args'].replace('${file}', image_filename)
    screenshot_cmd = '{} {}'.format(config['screenshot']['bin'], screenshot_args)

    # build upload command
    upload_args = config['upload']['args'].replace('${file}', image_filename)
    upload_args = upload_args.replace('${host}', config['host'])
    upload_cmd = '{} {}'.format(config['upload']['bin'], upload_args)

    # take screenshot
    subprocess.call(screenshot_cmd, shell=True, cwd=screenshot_dir)

    # upload and capture response
    out_raw = subprocess.check_output(upload_cmd, shell=True, cwd=screenshot_dir)
    out = json.loads(out_raw)
    url = out['result']['url']

    # print and copy link to clipboard
    clipboard_cmd = config['clipboard']['command'].replace('${url}', url)
    subprocess.call(clipboard_cmd, shell=True)
    print('File uploaded to: ' + url + ' (copied to clipboard)')

    # save link
    if config['history']:
        with open(history_dir.joinpath(history_filename), 'w') as f:
            f.write(url)

if __name__ == "__main__":
    main(sys.argv)
